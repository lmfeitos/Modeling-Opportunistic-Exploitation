source("Functions - GWDD Allee Effect.R")
source("Functions - GWDD Allee Effect.R")
help<- read.table("Subset of correlation grid seeds 100 each bin")
Binssubset<- help
source("Parameters File Allee 3.R")
###
nsims<- 500
div<- 500/nsims
yearlysizematrixsp1<- matrix(NA, nrow = nsims, ncol = nstep+1)
yearlysizematrixsp2<- matrix(NA, nrow = nsims, ncol = nstep+1)
extinctionyr<- matrix(NA, nrow = 2, ncol = nsims)
simdist1<- array(NA, dim = c(numgrid, numgrid, nstep + 1, nsims))
simdist2<- array(NA, dim = c(numgrid, numgrid, nstep + 1, nsims))
for(sim in 1:nsims){
sim<- div*sim
temppoachers<- round(((nspecies1 * species1rev) + (nspecies2*species2rev))/poachval) #calculates number of poachers based on total revenue that is possible
#set first seed
set.seed(Binssubset[sim, 1])
#generate omega grid
Omega_grid1<- createomegagrid(Ngrid = numgrid, Nu = sample(x = seq(from = .0001, to = .8,
length.out = 800),
size = 1))
#set second seed
set.seed(Binssubset[sim, 2])
#generate omega grid
Omega_grid2<-createomegagrid(Ngrid = numgrid, Nu = sample(x = seq(from = .0001, to = .8,
length.out = 800),
size = 1))
#reset seed
set.seed(sim) #set seed back to a number unrelated to grid generation (this will be the same 500 seeds for all of the population ratios)
temp<- multipletimesteps2species(Omega_gridsp1.fxn = Omega_grid1,
Omega_gridsp2.fxn = Omega_grid2,
Nanimalssp1.fxn = nspecies1, Nanimalssp2.fxn = nspecies2,
Ngrid.fxn = 10,
numberpoachers.fxn = temppoachers,
nstep.fxn = nstep,
rsp1.fxn = rsp1, rsp2.fxn = rsp2,
variablec.fxn = varcost, fixedc.fxn = fixcost,
revenuesp1.fxn = species1rev,
revenuesp2.fxn = species2rev,
prob1successsp1.fxn = psucc1,
prob1successsp2.fxn = psucc2,
sigmawsp1.fxn = 0, sigmawsp2.fxn = 0,
sigmav.fxn = 0,
selectivity.fxn = 2,
Probleave1.fxn = 0.05,
Probleave2.fxn = 0.05,
ammocost.fxn = ammomoney,
carrybackcost.fxn = carrybackmoney,
crit1.fxn = critval1,
crit2.fxn = critval2)
print(sim)
yearlysizematrixsp1[sim/div,]<- temp[[7]]
yearlysizematrixsp2[sim/div,]<- temp[[8]]
extinctionyr[1, sim/div]<- temp[[9]]
extinctionyr[2, sim/div]<- temp[[10]]
simdist1[,,,sim/div]<- temp[[5]]
simdist2[,,,sim/div]<- temp[[6]]
}
source('Z:/Chapter 1 Rerun October/Allee/Save yearly population size_short500.R')
