{
    "collab_server" : "",
    "contents" : "#################\n#################\n## Updated Dec 1 2019\n## requires GWDD movement file\n## requires parameter file\n## requires grid generations\n## switch sel function\n\nsource(\"Functions - GWDD movement fix_sel1.R\")\nsource(\"Parameters File Base LPS.R\")\n\nhelp<- read.table(\"Subset of correlation grid seeds 100 each bin\")\nBinssubset<- help\n\n#run 500 simulations for 50 price ratios\nnsims<- 500\nnumgrid<- 10\n\n## Probability of Success: \nnratios<- 50\nsuccessratio<- seq(from = 0, to = .5, length.out = nratios)\n\n###############################\n\n\nallrunsfisp1<- matrix(NA, nrow = nsims, ncol = nratios)\nallrunsfisp2<- matrix(NA, nrow = nsims, ncol = nratios)\n\n\nplottingmatrix1<- matrix(NA, nrow = nratios, ncol = 13, byrow = FALSE)\n#Collumn 1: correlation between original grids\n#Collumn 2: species 1 mean f/i\n#Collumn 3: species 2 mean f/i\n#Collumn 4: price ratio\n#column 5: number of poachers\n#collumn 6: sd species 1 f/i\n#collumn 7: sd species 2 f/i\n#collumn 8: sp1 median f/i\n#collumn 9: sp2 median f/i\n#collumn 10: sp1 lower ci\n#collumn 11: sp2 lower ci\n#collumn 12: sp1 upper ci\n#collumn 13: sp2 upper ci\n\n## to plot correlations\ncorrelationplot<- matrix(NA, nrow = (nsims * nratios), ncol = 5)\n#col 1 = correlation between start grids\n#col 2 = ratio\n#col 3 = final/initial species 1\n#col 4 = final/initial species 2\n#col 5 = correlation between omega grids\n\nextinctionmatsp1<- matrix(NA, nrow = nratios, ncol = nsims)\nextinctionmatsp2<- matrix(NA, nrow = nratios, ncol = nsims)\n\n## each collumn is the extinction time step for each simulation, 0 means it did not go extinct\n\n\nfor (i in 1:nratios){\n  \n  probsucc<- successratio[i] \n  print(probsucc)\n  \n  plottingmatrix1[i,4]<- probsucc\n  \n  temppoachers<- round(((nspecies1 * species1rev) + (nspecies2*species2rev))/poachval) #calculates number of poachers based on total revenue that is possible\n  plottingmatrix1[i,5]<- temppoachers\n  \n  proportionleftsp1<- rep(NA, nsims)\n  proportionleftsp2<- rep(NA, nsims)\n  extinctionyrsp1<- rep(NA, nsims)\n  extinctionyrsp2<- rep(NA, nsims)\n  \n  for(sim in 1:nsims){\n    #set first seed\n    set.seed(Binssubset[sim, 1])\n\n    #generate omega grid\n    Omega_grid1<- createomegagrid(Ngrid = numgrid, Nu = sample(x = seq(from = .0001, to = .8,\n                                                                       length.out = 800),\n                                                               size = 1))\n    \n    #set second seed\n    set.seed(Binssubset[sim, 2])\n    #generate omega grid\n    Omega_grid2<-createomegagrid(Ngrid = numgrid, Nu = sample(x = seq(from = .0001, to = .8,\n                                                                      length.out = 800),\n                                                              size = 1))\n    #reset seed\n    set.seed(sim) #set seed back to a number unrelated to grid generation (this will be the same 500 seeds for all of the population ratios)\n    \n    temp<- multipletimesteps2species(Omega_gridsp1.fxn = Omega_grid1, Omega_gridsp2.fxn = Omega_grid2,\n                                     Nanimalssp1.fxn = nspecies1, Nanimalssp2.fxn = nspecies2, Ngrid.fxn = 10,\n                                     numberpoachers.fxn = temppoachers, nstep.fxn = nstep,\n                                     rsp1.fxn = rsp1, rsp2.fxn = rsp2,\n                                     variablec.fxn = varcost, fixedc.fxn = fixcost, revenuesp1.fxn = species1rev,\n                                     revenuesp2.fxn = species2rev,\n                                     prob1successsp1.fxn = probsucc, prob1successsp2.fxn = probsucc,\n                                     sigmawsp1.fxn = 0, sigmawsp2.fxn = 0, sigmav.fxn = 0, #no process error or observation error\n                                     selectivity.fxn = 1, Probleave1.fxn = 0.05, Probleave2.fxn = 0.05,\n                                     ammocost.fxn = ammomoney, carrybackcost.fxn = carrybackmoney)\n    proportionleftsp1[sim]<- sum(temp[[2]])/sum(temp[[1]])\n    proportionleftsp2[sim]<- sum(temp[[4]])/sum(temp[[3]])\n    extinctionyrsp1[sim]<- temp[[9]]\n    extinctionyrsp2[sim]<- temp[[10]]\n    \n    correlationplot[(nsims*(i-1) + sim), 4]<- sum(temp[[4]])/sum(temp[[3]])\n    correlationplot[(nsims*(i-1) + sim), 3]<- sum(temp[[2]])/sum(temp[[1]]) \n    #print(correlationplot[(nsims*(i-1) + sim), 3])\n    correlationplot[(nsims*(i-1) + sim), 2]<- probsucc\n    correlationplot[(nsims*(i-1) + sim), 1]<- cor(c(temp[[1]]), c(temp[[3]])) #correlaiton between starting grids not omega grids\n    correlationplot[(nsims*(i-1) + sim), 5]<- cor(c(Omega_grid1), c(Omega_grid2))\n  }\n  allrunsfisp1[,i]<- proportionleftsp1\n  allrunsfisp2[,i]<- proportionleftsp2\n  \n  \n  extinctionmatsp1[i,]<- extinctionyrsp1\n  extinctionmatsp2[i,]<- extinctionyrsp2\n  plottingmatrix1[i, 2]<- mean(proportionleftsp1)\n  plottingmatrix1[i, 3]<- mean(proportionleftsp2)\n  plottingmatrix1[i, 6]<- sd(proportionleftsp1)\n  plottingmatrix1[i, 7]<- sd(proportionleftsp2)\n  plottingmatrix1[i, 8]<- quantile(proportionleftsp1, c(.5))\n  plottingmatrix1[i, 9]<- quantile(proportionleftsp2, c(.5))\n  plottingmatrix1[i, 10]<- quantile(proportionleftsp1, c(.025))\n  plottingmatrix1[i, 11]<- quantile(proportionleftsp2, c(.025))\n  plottingmatrix1[i, 12]<- quantile(proportionleftsp1, c(.975))\n  plottingmatrix1[i, 13]<- quantile(proportionleftsp2, c(.975))\n\n  \n}\n\nprobsuccbothplot<- plottingmatrix1\nprobsuccbothcorr<- correlationplot\nprobsuccbothext1<- extinctionmatsp1\nprobsuccbothext2<- extinctionmatsp2\n\n\n#add column names and write to file so that I have it saved\n\ncolnames(probsuccbothplot)<- c(\"NA\", \"SP1 f/i\", \"SP2 f/i\", \"prob succ both\", \"#poachers\", \"sd sp1\",\n                          \"sd sp2\", \"med sp1\", \"med sp2\", \"sp1 lower ci\", \"sp2 lower ci\", \"sp1 upper ci\", \"sp2 upper ci\")\nwrite.table(probsuccbothplot, file = \"probsuccbothplot\", sep = \" \",\n            row.names = FALSE, col.names = TRUE)\n\ncolnames(probsuccbothcorr)<- c(\"correlation between start grids\", \"probsucc both\",\n                                                  \"Sp1 f/i\", \"Sp2 f/i\", \"corelation between omega grids\")\nwrite.table(probsuccbothcorr, file = \"probsuccbothcorr\", sep = \" \",\n            row.names = FALSE, col.names = TRUE)\n\n\nwrite.table(probsuccbothext1, file = \"probsuccbothext1\", sep = \" \",\n            row.names = FALSE, col.names = FALSE)\n\nwrite.table(probsuccbothext2, file = \"probsuccbothext2\", sep = \" \",\n            row.names = FALSE, col.names = FALSE)\n\nwrite.table(allrunsfisp1, file = \"allrunsfisp1\", sep = \" \",\n            row.names = FALSE, col.names = FALSE)\n#rows are simulation \n#columns are the sensitivity\n\nwrite.table(allrunsfisp2, file = \"allrunsfisp2\", sep = \" \",\n            row.names = FALSE, col.names = FALSE)\n#rows are simulation \n#columns are the sensitivity\n",
    "created" : 1606892505168.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3327693849",
    "id" : "1DCD5135",
    "lastKnownWriteTime" : 1606892575,
    "last_content_update" : 1606892575863,
    "path" : "C:/Users/Stephanie Thurner/OneDrive - UW/Masters Stuff/Chapter 1 Simulation Runs Redo/Both Prob Succ/Simulation Code V3.R",
    "project_path" : "Simulation Code V3.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}