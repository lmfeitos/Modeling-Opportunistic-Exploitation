{
    "collab_server" : "",
    "contents" : "\nnsims<- 300\n#############################################################################\n### Read in Allee Data===============\n\n\n# ## read in data - Allee Effect One Species ==================\nyearlysizematrixsp1<- read.table(\"yearlysizematrixsp1onesp_allee_trevor4\", header = F)\nyearlysizematrixsp2<- read.table(\"yearlysizematrixsp2onesp_allee_trevor4\", header = F)\n\noriginalsp1<- yearlysizematrixsp1[1:nsims,]\noriginalsp2<- yearlysizematrixsp2[1:nsims,]\n\nyearlysizematrixsp1<- yearlysizematrixsp1[1:nsims,]\nyearlysizematrixsp2<- yearlysizematrixsp2[1:nsims,]\n\n## make this \"depletion\" -- divide by initial population number\nyearlysizematrixsp1<- yearlysizematrixsp1/yearlysizematrixsp1[1,1]\nyearlysizematrixsp2<- yearlysizematrixsp2/yearlysizematrixsp2[1,1]\n\n# yearlysizematrixsp1<- originalsp1\n# yearlysizematrixsp2<- originalsp2\n\n## number of simulations\nsimnum<- nsims\n\n## calculate yearly mean depletion\nspecies1avgbyyr<- apply(yearlysizematrixsp1, 2, FUN = median)\nspecies2avgbyyr<- apply(X = yearlysizematrixsp2, 2, FUN = median)\n\n## calculate yearly sd\n# sp1yrsd<- rep(NA, ncol(yearlysizematrixsp1))\n# sp2yrsd<- rep(NA, ncol(yearlysizematrixsp2)) \n# \n# for(i in 1:length(sp1yrsd)){\n#   sp1yrsd[i]<- sd(yearlysizematrixsp1[,i])\n#   sp2yrsd[i]<- sd(yearlysizematrixsp1[,i])\n# }\n\nquantilesp1<- matrix(NA, nrow = ncol(yearlysizematrixsp1), ncol = 3) \nquantilesp2<- matrix(NA, nrow = ncol(yearlysizematrixsp2), ncol = 3) \n\nfor(i in 1:nrow(quantilesp1)){\n  quantilesp1[i, ]<- quantile(yearlysizematrixsp1[, i], c(.025,.5, .975))\n  quantilesp2[i, ]<- quantile(yearlysizematrixsp2[, i], c(.025,.5, .975))\n}\n\nnrow(quantilesp1)\n\n## create plotting matrix for sp1  -- includes CI calculations\nplottingsp1<- matrix(NA, nrow = nrow(quantilesp1), ncol = 4) #col 1 is year, col 2 is mean, col 3 is lower ci, col 4 is upper ci, \nplottingsp1[,1]<- 0:((nrow(quantilesp1)) - 1) \nplottingsp1[,2]<- quantilesp1[,2] \nplottingsp1[,3]<- quantilesp1[,1]\nplottingsp1[,4]<- quantilesp1[,3]\n\n## create plotting matrix for sp2  -- includes CI calculations\nplottingsp2<- matrix(NA, nrow = nrow(quantilesp2), ncol = 4) #col 1 is year, col 2 is mean, col 3 is lower ci, col 4 is upper ci, \nplottingsp2[,1]<- 0:(nrow(quantilesp2) - 1)\nplottingsp2[,2]<- quantilesp2[,2]\nplottingsp2[,3]<- quantilesp2[,1]\nplottingsp2[,4]<- quantilesp2[,3]\n\n\nAllee_plottingsp1<- plottingsp1\nAllee_plottingsp2<- plottingsp2\n\n\n\n\n#############################################################################\n### Read in Anthropogenic Allee Data===============\n\n\n# ## read in data - Allee Effect One Species ==================\nyearlysizematrixsp1<- read.table(\"yearlysizematrixsp1_aa1species\", header = F)\nyearlysizematrixsp2<- read.table(\"yearlysizematrixsp2_aa1species\", header = F)\n\noriginalsp1<- yearlysizematrixsp1[1:nsims,]\noriginalsp2<- yearlysizematrixsp2[1:nsims,]\n\nyearlysizematrixsp1<- yearlysizematrixsp1[1:nsims,]\nyearlysizematrixsp2<- yearlysizematrixsp2[1:nsims,]\n\n## make this \"depletion\" -- divide by initial population number\nyearlysizematrixsp1<- yearlysizematrixsp1/yearlysizematrixsp1[1,1]\nyearlysizematrixsp2<- yearlysizematrixsp2/yearlysizematrixsp2[1,1]\n\n# yearlysizematrixsp1<- originalsp1\n# yearlysizematrixsp2<- originalsp2\n\n## number of simulations\nsimnum<- nsims\n\n## calculate yearly mean depletion\nspecies1avgbyyr<- apply(yearlysizematrixsp1, 2, FUN = median)\nspecies2avgbyyr<- apply(X = yearlysizematrixsp2, 2, FUN = median)\n\n## calculate yearly sd\n# sp1yrsd<- rep(NA, ncol(yearlysizematrixsp1))\n# sp2yrsd<- rep(NA, ncol(yearlysizematrixsp2)) \n# \n# for(i in 1:length(sp1yrsd)){\n#   sp1yrsd[i]<- sd(yearlysizematrixsp1[,i])\n#   sp2yrsd[i]<- sd(yearlysizematrixsp1[,i])\n# }\n\nquantilesp1<- matrix(NA, nrow = ncol(yearlysizematrixsp1), ncol = 3) \nquantilesp2<- matrix(NA, nrow = ncol(yearlysizematrixsp2), ncol = 3) \n\nfor(i in 1:nrow(quantilesp1)){\n  quantilesp1[i, ]<- quantile(yearlysizematrixsp1[, i], c(.025,.5, .975))\n  quantilesp2[i, ]<- quantile(yearlysizematrixsp2[, i], c(.025,.5, .975))\n}\n\nnrow(quantilesp1)\n\n## create plotting matrix for sp1  -- includes CI calculations\nplottingsp1<- matrix(NA, nrow = nrow(quantilesp1), ncol = 4) #col 1 is year, col 2 is mean, col 3 is lower ci, col 4 is upper ci, \nplottingsp1[,1]<- 0:((nrow(quantilesp1)) - 1) \nplottingsp1[,2]<- quantilesp1[,2] \nplottingsp1[,3]<- quantilesp1[,1]\nplottingsp1[,4]<- quantilesp1[,3]\n\n## create plotting matrix for sp2  -- includes CI calculations\nplottingsp2<- matrix(NA, nrow = nrow(quantilesp2), ncol = 4) #col 1 is year, col 2 is mean, col 3 is lower ci, col 4 is upper ci, \nplottingsp2[,1]<- 0:(nrow(quantilesp2) - 1)\nplottingsp2[,2]<- quantilesp2[,2]\nplottingsp2[,3]<- quantilesp2[,1]\nplottingsp2[,4]<- quantilesp2[,3]\n\n\nAnth_plottingsp1<- plottingsp1\nAnth_plottingsp2<- plottingsp2\n\n\n#############################################################################\n### Read in Base Case Data===============\n\n# ## read in data - Allee Effect One Species ==================\nyearlysizematrixsp1<- read.table(\"yearlysizematrixsp1onesp_par24\", header = F)\nyearlysizematrixsp2<- read.table(\"yearlysizematrixsp2onesp_par24\", header = F)\n\noriginalsp1<- yearlysizematrixsp1[1:nsims,]\noriginalsp2<- yearlysizematrixsp2[1:nsims,]\n\nyearlysizematrixsp1<- yearlysizematrixsp1[1:nsims,]\nyearlysizematrixsp2<- yearlysizematrixsp2[1:nsims,]\n\n## make this \"depletion\" -- divide by initial population number\nyearlysizematrixsp1<- yearlysizematrixsp1/yearlysizematrixsp1[1,1]\nyearlysizematrixsp2<- yearlysizematrixsp2/yearlysizematrixsp2[1,1]\n\n# yearlysizematrixsp1<- originalsp1\n# yearlysizematrixsp2<- originalsp2\n\n## number of simulations\nsimnum<- nsims\n\n## calculate yearly mean depletion\nspecies1avgbyyr<- apply(yearlysizematrixsp1, 2, FUN = median)\nspecies2avgbyyr<- apply(X = yearlysizematrixsp2, 2, FUN = median)\n\n## calculate yearly sd\n# sp1yrsd<- rep(NA, ncol(yearlysizematrixsp1))\n# sp2yrsd<- rep(NA, ncol(yearlysizematrixsp2)) \n# \n# for(i in 1:length(sp1yrsd)){\n#   sp1yrsd[i]<- sd(yearlysizematrixsp1[,i])\n#   sp2yrsd[i]<- sd(yearlysizematrixsp1[,i])\n# }\n\nquantilesp1<- matrix(NA, nrow = ncol(yearlysizematrixsp1), ncol = 3) \nquantilesp2<- matrix(NA, nrow = ncol(yearlysizematrixsp2), ncol = 3) \n\nfor(i in 1:nrow(quantilesp1)){\n  quantilesp1[i, ]<- quantile(yearlysizematrixsp1[, i], c(.025,.5, .975))\n  quantilesp2[i, ]<- quantile(yearlysizematrixsp2[, i], c(.025,.5, .975))\n}\n\nnrow(quantilesp1)\n\n## create plotting matrix for sp1  -- includes CI calculations\nplottingsp1<- matrix(NA, nrow = nrow(quantilesp1), ncol = 4) #col 1 is year, col 2 is mean, col 3 is lower ci, col 4 is upper ci, \nplottingsp1[,1]<- 0:((nrow(quantilesp1)) - 1) \nplottingsp1[,2]<- quantilesp1[,2] \nplottingsp1[,3]<- quantilesp1[,1]\nplottingsp1[,4]<- quantilesp1[,3]\n\n## create plotting matrix for sp2  -- includes CI calculations\nplottingsp2<- matrix(NA, nrow = nrow(quantilesp2), ncol = 4) #col 1 is year, col 2 is mean, col 3 is lower ci, col 4 is upper ci, \nplottingsp2[,1]<- 0:(nrow(quantilesp2) - 1)\nplottingsp2[,2]<- quantilesp2[,2]\nplottingsp2[,3]<- quantilesp2[,1]\nplottingsp2[,4]<- quantilesp2[,3]\n\n\nBase_plottingsp1<- plottingsp1\nBase_plottingsp2<- plottingsp2\n\n\n#############################################################################\n### Read in Opportunistic Exploitation Data===============\n\n# ## read in data - Allee Effect One Species ==================\nyearlysizematrixsp1<- read.table(\"yearlysizematrixsp1_par24\", header = F)\nyearlysizematrixsp2<- read.table(\"yearlysizematrixsp2_par24\", header = F)\n\noriginalsp1<- yearlysizematrixsp1[1:nsims,]\noriginalsp2<- yearlysizematrixsp2[1:nsims,]\n\nyearlysizematrixsp1<- yearlysizematrixsp1[1:nsims,]\nyearlysizematrixsp2<- yearlysizematrixsp2[1:nsims,]\n\n## make this \"depletion\" -- divide by initial population number\nyearlysizematrixsp1<- yearlysizematrixsp1/yearlysizematrixsp1[1,1]\nyearlysizematrixsp2<- yearlysizematrixsp2/yearlysizematrixsp2[1,1]\n\n# yearlysizematrixsp1<- originalsp1\n# yearlysizematrixsp2<- originalsp2\n\n## number of simulations\nsimnum<- nsims\n\n## calculate yearly mean depletion\nspecies1avgbyyr<- apply(yearlysizematrixsp1, 2, FUN = median)\nspecies2avgbyyr<- apply(X = yearlysizematrixsp2, 2, FUN = median)\n\n## calculate yearly sd\n# sp1yrsd<- rep(NA, ncol(yearlysizematrixsp1))\n# sp2yrsd<- rep(NA, ncol(yearlysizematrixsp2)) \n# \n# for(i in 1:length(sp1yrsd)){\n#   sp1yrsd[i]<- sd(yearlysizematrixsp1[,i])\n#   sp2yrsd[i]<- sd(yearlysizematrixsp1[,i])\n# }\n\nquantilesp1<- matrix(NA, nrow = ncol(yearlysizematrixsp1), ncol = 3) \nquantilesp2<- matrix(NA, nrow = ncol(yearlysizematrixsp2), ncol = 3) \n\nfor(i in 1:nrow(quantilesp1)){\n  quantilesp1[i, ]<- quantile(yearlysizematrixsp1[, i], c(.025,.5, .975))\n  quantilesp2[i, ]<- quantile(yearlysizematrixsp2[, i], c(.025,.5, .975))\n}\n\nnrow(quantilesp1)\n\n## create plotting matrix for sp1  -- includes CI calculations\nplottingsp1<- matrix(NA, nrow = nrow(quantilesp1), ncol = 4) #col 1 is year, col 2 is mean, col 3 is lower ci, col 4 is upper ci, \nplottingsp1[,1]<- 0:((nrow(quantilesp1)) - 1) \nplottingsp1[,2]<- quantilesp1[,2] \nplottingsp1[,3]<- quantilesp1[,1]\nplottingsp1[,4]<- quantilesp1[,3]\n\n## create plotting matrix for sp2  -- includes CI calculations\nplottingsp2<- matrix(NA, nrow = nrow(quantilesp2), ncol = 4) #col 1 is year, col 2 is mean, col 3 is lower ci, col 4 is upper ci, \nplottingsp2[,1]<- 0:(nrow(quantilesp2) - 1)\nplottingsp2[,2]<- quantilesp2[,2]\nplottingsp2[,3]<- quantilesp2[,1]\nplottingsp2[,4]<- quantilesp2[,3]\n\n\nOE_plottingsp1<- plottingsp1\nOE_plottingsp2<- plottingsp2",
    "created" : 1604608884426.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "421264283",
    "id" : "3DF3D6CC",
    "lastKnownWriteTime" : 1604613239,
    "last_content_update" : 1604613239798,
    "path" : "C:/Users/Stephanie Thurner/OneDrive - UW/Masters Stuff/Chapter 1 Simulation Runs Redo/Plot all scenarios/Read in Data.R",
    "project_path" : "Read in Data.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}