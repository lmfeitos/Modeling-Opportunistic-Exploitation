{
    "collab_server" : "",
    "contents" : "###############\n## Grid wide density dependence -- poisson process\n## 11/2/2020\n\nsource(\"Functions - GWDD movement fix_sel1.R\")\n\n# File where grids (500) are located:\n\nhelp<- read.table(\"Subset of correlation grid seeds 100 each bin\")\nBinssubset<- help\n\nsource(\"Parameters File 24.R\")\n### \nnsims<- 500\n\ndiv<- 500/nsims\n#################### two species ============\n\n# ## Process Error: \n# nratios<- 75\n# processvec<- seq(from = .2, to = .4, length.out = nratios) #really the cv but didnt change var name\n\nyearlysizematrixsp1<- matrix(NA, nrow = nsims, ncol = nstep+1)\nyearlysizematrixsp2<- matrix(NA, nrow = nsims, ncol = nstep+1)\n\nextinctionyr<- matrix(NA, nrow = 2, ncol = nsims)\n#row 1 = species 1\n#row 2 = species 2\n\nsimdist1<- array(NA, dim = c(numgrid, numgrid, nstep + 1, nsims))\nsimdist2<- array(NA, dim = c(numgrid, numgrid, nstep + 1, nsims))\n\nfor(sim in 1:nsims){\n  sim<- div*sim\n  temppoachers<- round(((nspecies1 * species1rev) + (nspecies2*species2rev))/poachval) #calculates number of poachers based on total revenue that is possible\n  #set first seed\n  set.seed(Binssubset[sim, 1])\n  #generate omega grid\n  Omega_grid1<- createomegagrid(Ngrid = numgrid, Nu = sample(x = seq(from = .0001, to = .8,\n                                                                     length.out = 800),\n                                                             size = 1))\n  #set second seed\n  set.seed(Binssubset[sim, 2])\n  #generate omega grid\n  Omega_grid2<-createomegagrid(Ngrid = numgrid, Nu = sample(x = seq(from = .0001, to = .8,\n                                                                    length.out = 800),\n                                                            size = 1))\n  #reset seed\n  set.seed(sim) #set seed back to a number unrelated to grid generation (this will be the same 500 seeds for all of the population ratios)\n  \n  temp<- multipletimesteps2species(Omega_gridsp1.fxn = Omega_grid1, \n                                   Omega_gridsp2.fxn = Omega_grid2,\n                                   Nanimalssp1.fxn = nspecies1, Nanimalssp2.fxn = nspecies2,\n                                   Ngrid.fxn = 10,\n                                   numberpoachers.fxn = temppoachers, \n                                   nstep.fxn = nstep,\n                                   rsp1.fxn = rsp1, rsp2.fxn = rsp2,\n                                   variablec.fxn = varcost, fixedc.fxn = fixcost,\n                                   revenuesp1.fxn = species1rev,\n                                   revenuesp2.fxn = species2rev,\n                                   prob1successsp1.fxn = psucc1, \n                                   prob1successsp2.fxn = psucc2,\n                                   sigmawsp1.fxn = 0, sigmawsp2.fxn = 0,\n                                   sigmav.fxn = 0,\n                                   selectivity.fxn = 1, \n                                   Probleave1.fxn = 0.05, \n                                   Probleave2.fxn = 0.05,\n                                   ammocost.fxn = ammomoney, \n                                   carrybackcost.fxn = carrybackmoney)\n  print(sim)\n  yearlysizematrixsp1[sim/div,]<- temp[[7]]\n  yearlysizematrixsp2[sim/div,]<- temp[[8]]\n  extinctionyr[1, sim/div]<- temp[[9]]\n  extinctionyr[2, sim/div]<- temp[[10]]\n  \n  simdist1[,,,sim/div]<- temp[[5]]\n  simdist2[,,,sim/div]<- temp[[6]]\n  \n}\n\nwrite.table(yearlysizematrixsp1, file = \"yearlysizematrixsp1_par24\", sep = \" \",\n            row.names = FALSE, col.names = FALSE)\nwrite.table(yearlysizematrixsp2, file = \"yearlysizematrixsp2_par24\", sep = \" \",\n            row.names = FALSE, col.names = FALSE)\nwrite.table(extinctionyr, file = \"extinctionyr_par24\", sep = \" \",\n            row.names = FALSE, col.names = FALSE)\n#ncol(yearlysizematrixsp1)\nsave(simdist1, file = \"simdist1_par24.rda\")\nsave(simdist2, file = \"simdist2_par24.rda\")\n\n#################### one species ============\n\n# ## Process Error: \n# nratios<- 75\n# processvec<- seq(from = .2, to = .4, length.out = nratios) #really the cv but didnt change var name\n## defaults: \n\nspecies2rev<- 0\n\nyearlysizematrixsp1onesp<- matrix(NA, nrow = nsims, ncol = nstep + 1)\nyearlysizematrixsp2onesp<- matrix(NA, nrow = nsims, ncol = nstep + 1)\nextinctionyronesp<- matrix(NA, nrow = 2, ncol = nsims)\n#row 1 = species 1\n#row 2 = species 2\nsimdist1onesp<- array(NA, dim = c(numgrid, numgrid, nstep + 1, nsims))\nsimdist2onesp<- array(NA, dim = c(numgrid, numgrid, nstep + 1, nsims))\n\nfor(sim in 1:nsims){\n  sim<- div*sim\n  temppoachers<- round(((nspecies1 * species1rev) + (nspecies2*species2rev))/poachval) #calculates number of poachers based on total revenue that is possible\n  #set first seed\n  set.seed(Binssubset[sim, 1])\n  #generate omega grid\n  Omega_grid1<- createomegagrid(Ngrid = numgrid, Nu = sample(x = seq(from = .0001, to = .8,\n                                                                     length.out = 800),\n                                                             size = 1))\n  #set second seed\n  set.seed(Binssubset[sim, 2])\n  #generate omega grid\n  Omega_grid2<-createomegagrid(Ngrid = numgrid, Nu = sample(x = seq(from = .0001, to = .8,\n                                                                    length.out = 800),\n                                                            size = 1))\n  #reset seed\n  set.seed(sim) #set seed back to a number unrelated to grid generation (this will be the same 500 seeds for all of the population ratios)\n  \n  \n  temp<- multipletimesteps2species(Omega_gridsp1.fxn = Omega_grid1, \n                                   Omega_gridsp2.fxn = Omega_grid2,\n                                   Nanimalssp1.fxn = nspecies1, Nanimalssp2.fxn = nspecies2,\n                                   Ngrid.fxn = 10,\n                                   numberpoachers.fxn = temppoachers, \n                                   nstep.fxn = nstep,\n                                   rsp1.fxn = rsp1, rsp2.fxn = rsp2,\n                                   variablec.fxn = varcost, fixedc.fxn = fixcost,\n                                   revenuesp1.fxn = species1rev,\n                                   revenuesp2.fxn = species2rev,\n                                   prob1successsp1.fxn = psucc1, \n                                   prob1successsp2.fxn = psucc2,\n                                   sigmawsp1.fxn = 0, sigmawsp2.fxn = 0,\n                                   sigmav.fxn = 0,\n                                   selectivity.fxn = 1, \n                                   Probleave1.fxn = 0.05, \n                                   Probleave2.fxn = 0.05,\n                                   ammocost.fxn = ammomoney, \n                                   carrybackcost.fxn = carrybackmoney)\n  print(sim)\n  yearlysizematrixsp1onesp[sim/div,]<- temp[[7]]\n  yearlysizematrixsp2onesp[sim/div,]<- temp[[8]]\n  extinctionyronesp[1, sim/div]<- temp[[9]]\n  extinctionyronesp[2, sim/div]<- temp[[10]]\n  \n  simdist1onesp[,,,sim/div]<- temp[[5]]\n  simdist2onesp[,,,sim/div]<- temp[[6]]\n}\n\nwrite.table(yearlysizematrixsp1onesp, file = \"yearlysizematrixsp1onesp_par24\", sep = \" \",\n            row.names = FALSE, col.names = FALSE)\nwrite.table(yearlysizematrixsp2onesp, file = \"yearlysizematrixsp2onesp_par24\", sep = \" \",\n            row.names = FALSE, col.names = FALSE)\nwrite.table(extinctionyronesp, file = \"extinctionyronesp_par24\", sep = \" \",\n            row.names = FALSE, col.names = FALSE)\n\n\nsave(simdist1onesp, file = \"simdist1onesp_par24.rda\")\nsave(simdist2onesp, file = \"simdist2onesp_par24.rda\")\n",
    "created" : 1603297046566.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2964058866",
    "id" : "62B8D550",
    "lastKnownWriteTime" : 1604421917,
    "last_content_update" : 1604421917,
    "path" : "C:/Users/Stephanie Thurner/OneDrive - UW/Masters Stuff/Chapter 1 Simulation Runs Redo/Base Case/Save yearly population size_short500.R",
    "project_path" : "Save yearly population size_short500.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}